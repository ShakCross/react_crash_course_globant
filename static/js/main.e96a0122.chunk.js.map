{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","_ref","color","text","onClick","react_default","a","createElement","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","components_Button","Footer","react_router_dom","to","Task","task","onDelete","onToggle","concat","reminder","onDoubleClick","id","index_esm","cursor","day","Tasks","tasks","Fragment","map","index","components_Task","key","AddTask","_useState","useState","_useState2","Object","slicedToArray","setText","_useState3","_useState4","setDay","_useState5","_useState6","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","About","App","showAddTask","setShowAddTask","setTasks","useEffect","asyncToGenerator","_regeneratorRuntime","mark","_callee","tasksFromServer","wrap","_context","prev","next","fetchTasks","sent","stop","apply","this","arguments","getTasks","_ref2","_callee2","res","data","_context2","fetch","json","abrupt","fetchTask","_ref3","_callee3","_context3","_x","addTask","_ref4","_callee4","_context4","method","headers","Content-type","body","JSON","stringify","toConsumableArray","_x2","deleteTask","_ref5","_callee5","_context5","status","filter","_x3","toggleReminder","_ref6","_callee6","taskToToggle","updTask","_context6","objectSpread","_x4","components_Header","react_router","path","element","components_AddTask","length","components_Tasks","components_About","components_Footer","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"gPAGMA,EAAS,SAAAC,GAA8B,IAA3BC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,QAC7B,OACEC,EAAAC,EAAAC,cAAA,UACEH,QAASA,EACTI,MAAO,CAAEC,gBAAiBP,GAC1BQ,UAAU,OAETP,IAKPH,EAAOW,aAAe,CACpBT,MAAO,aASMF,QCpBTY,EAAS,SAAAX,GAA+B,IAA5BY,EAA4BZ,EAA5BY,MAAOC,EAAqBb,EAArBa,MAAOC,EAAcd,EAAdc,QACxBC,EAAWC,cAEjB,OACEZ,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAChBL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QAAQG,GACC,MAAtBG,EAASE,UACRb,EAAAC,EAAAC,cAACY,EAAD,CACEjB,MAAOa,EAAU,MAAQ,QACzBZ,KAAMY,EAAU,QAAU,MAC1BX,QAASU,MAOnBF,EAAOD,aAAe,CACpBE,MAAO,gBAOMD,QClBAQ,EATA,WACb,OACEf,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAG,UAAT,kBCcSC,EAlBF,SAAAtB,GAAkC,IAA/BuB,EAA+BvB,EAA/BuB,KAAMC,EAAyBxB,EAAzBwB,SAAUC,EAAezB,EAAfyB,SAC9B,OACErB,EAAAC,EAAAC,cAAA,OACEG,UAAS,QAAAiB,OAAUH,EAAKI,UAAY,YACpCC,cAAe,kBAAMH,EAASF,EAAKM,MAEnCzB,EAAAC,EAAAC,cAAA,UACGiB,EAAKrB,KAAM,IACZE,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEvB,MAAO,CAAEN,MAAO,MAAO8B,OAAQ,WAC/B5B,QAAS,kBAAMqB,EAASD,EAAKM,QAGjCzB,EAAAC,EAAAC,cAAA,SAAIiB,EAAKS,OCHAC,EAVD,SAAAjC,GAAmC,IAAhCkC,EAAgClC,EAAhCkC,MAAOV,EAAyBxB,EAAzBwB,SAAUC,EAAezB,EAAfyB,SAChC,OACErB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACGD,EAAME,IAAI,SAACb,EAAMc,GAAP,OACTjC,EAAAC,EAAAC,cAACgC,EAAD,CAAMC,IAAKF,EAAOd,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,QCmDrDe,EAvDC,SAAAxC,GAAe,IAAZa,EAAYb,EAAZa,MAAY4B,EACLC,mBAAS,IADJC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACtBvC,EADsByC,EAAA,GAChBG,EADgBH,EAAA,GAAAI,EAEPL,mBAAS,IAFFM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAEtBf,EAFsBgB,EAAA,GAEjBC,EAFiBD,EAAA,GAAAE,EAGGR,oBAAS,GAHZS,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGtBvB,EAHsBwB,EAAA,GAGZC,EAHYD,EAAA,GAoB7B,OACE/C,EAAAC,EAAAC,cAAA,QAAMG,UAAU,WAAW4C,SAhBZ,SAACC,GAChBA,EAAEC,iBAEGrD,GAKLW,EAAM,CAAEX,OAAM8B,MAAKL,aAEnBmB,EAAQ,IACRG,EAAO,IACPG,GAAY,IARVI,MAAM,uBAaNpD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,SACEmD,KAAK,OACLC,YAAY,WACZC,MAAOzD,EACP0D,SAAU,SAACN,GAAD,OAAOR,EAAQQ,EAAEO,OAAOF,WAGtCvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,SACEmD,KAAK,OACLC,YAAY,iBACZC,MAAO3B,EACP4B,SAAU,SAACN,GAAD,OAAOL,EAAOK,EAAEO,OAAOF,WAGrCvD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mCACbL,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SACEmD,KAAK,WACLK,QAASnC,EACTgC,MAAOhC,EACPiC,SAAU,SAACN,GAAD,OAAOF,EAAYE,EAAES,cAAcD,aAIjD1D,EAAAC,EAAAC,cAAA,SAAOmD,KAAK,SAASE,MAAM,YAAYlD,UAAU,oBCxCxCuD,EAVD,WACZ,OACE5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAMC,GAAG,KAAT,8xMCCN,IAoHe4C,EApHH,WAAM,IAAAxB,EACsBC,oBAAS,GAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTyB,EADSvB,EAAA,GACIwB,EADJxB,EAAA,GAAAI,EAEUL,mBAAS,IAFnBM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAETb,EAFSc,EAAA,GAEFoB,EAFEpB,EAAA,GAIhBqB,oBAAU,YACM,eAAArE,EAAA4C,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,IAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACeC,IADf,OACTL,EADSE,EAAAI,KAEfZ,EAASM,GAFM,wBAAAE,EAAAK,SAAAR,MAAH,yBAAAzE,EAAAkF,MAAAC,KAAAC,YAAA,EAKdC,IACC,IAGH,IAAMN,EAAU,eAAAO,EAAA1C,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAAe,IAAA,IAAAC,EAAAC,EAAA,OAAAlB,IAAAI,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACCa,MAAM,+BADP,cACXH,EADWE,EAAAV,KAAAU,EAAAZ,KAAA,EAEEU,EAAII,OAFN,cAEXH,EAFWC,EAAAV,KAAAU,EAAAG,OAAA,SAIVJ,GAJU,wBAAAC,EAAAT,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAQVU,EAAS,eAAAC,EAAAnD,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAAwB,EAAOnE,GAAP,IAAA2D,EAAAC,EAAA,OAAAlB,IAAAI,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACEa,MAAK,+BAAAjE,OAAgCG,IADvC,cACV2D,EADUS,EAAAjB,KAAAiB,EAAAnB,KAAA,EAEGU,EAAII,OAFP,cAEVH,EAFUQ,EAAAjB,KAAAiB,EAAAJ,OAAA,SAITJ,GAJS,wBAAAQ,EAAAhB,SAAAe,MAAH,gBAAAE,GAAA,OAAAH,EAAAb,MAAAC,KAAAC,YAAA,GAQTe,EAAO,eAAAC,EAAAxD,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAA6B,EAAO9E,GAAP,IAAAiE,EAAAC,EAAA,OAAAlB,IAAAI,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACIa,MAAM,8BAA+B,CACrDY,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUrF,KANT,cACRiE,EADQc,EAAAtB,KAAAsB,EAAAxB,KAAA,EASKU,EAAII,OATT,OASRH,EATQa,EAAAtB,KAWdZ,EAAQ,GAAA1C,OAAAkB,OAAAiE,EAAA,EAAAjE,CAAKV,GAAL,CAAYuD,KAXN,wBAAAa,EAAArB,SAAAoB,MAAH,gBAAAS,GAAA,OAAAV,EAAAlB,MAAAC,KAAAC,YAAA,GAmBP2B,EAAU,eAAAC,EAAApE,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAAyC,EAAOpF,GAAP,OAAA0C,IAAAI,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACCa,MAAK,+BAAAjE,OAAgCG,GAAM,CAC3D0E,OAAQ,WAFO,OAKF,MALEW,EAAAlC,KAKbmC,OACA/C,EAASlC,EAAMkF,OAAO,SAAC7F,GAAD,OAAUA,EAAKM,KAAOA,KAC5C2B,MAAM,4BAPO,wBAAA0D,EAAAjC,SAAAgC,MAAH,gBAAAI,GAAA,OAAAL,EAAA9B,MAAAC,KAAAC,YAAA,GAWVkC,EAAc,eAAAC,EAAA3E,OAAA0B,EAAA,EAAA1B,CAAA2B,IAAAC,KAAG,SAAAgD,EAAO3F,GAAP,IAAA4F,EAAAC,EAAAlC,EAAAC,EAAA,OAAAlB,IAAAI,KAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACMgB,EAAUjE,GADhB,cACf4F,EADeE,EAAA3C,KAEf0C,EAFe9E,OAAAgF,EAAA,EAAAhF,CAAA,GAEA6E,EAFA,CAEc9F,UAAW8F,EAAa9F,WAFtCgG,EAAA7C,KAAA,EAIHa,MAAK,+BAAAjE,OAAgCG,GAAM,CAC3D0E,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUc,KATF,cAIflC,EAJemC,EAAA3C,KAAA2C,EAAA7C,KAAA,EAYFU,EAAII,OAZF,OAYfH,EAZekC,EAAA3C,KAcrBZ,EACElC,EAAME,IAAI,SAACb,GAAD,OACRA,EAAKM,KAAOA,EAAZe,OAAAgF,EAAA,EAAAhF,CAAA,GAAsBrB,EAAtB,CAA4BI,SAAU8D,EAAK9D,WAAaJ,KAhBvC,yBAAAoG,EAAA1C,SAAAuC,MAAH,gBAAAK,GAAA,OAAAN,EAAArC,MAAAC,KAAAC,YAAA,GAqBpB,OACEhF,EAAAC,EAAAC,cAACc,EAAA,EAAD,KACEhB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAACwH,EAAD,CACEjH,MAAO,kBAAMsD,GAAgBD,IAC7BpD,QAASoD,IAEX9D,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CACEC,KAAK,IACLC,QACE7H,EAAAC,EAAAC,cAAAF,EAAAC,EAAA8B,SAAA,KACG+B,GAAe9D,EAAAC,EAAAC,cAAC4H,EAAD,CAASrH,MAAOsF,IAC/BjE,EAAMiG,OAAS,EACd/H,EAAAC,EAAAC,cAAC8H,EAAD,CACElG,MAAOA,EACPV,SAAUuF,EACVtF,SAAU6F,IAGZ,sBAKRlH,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAOC,KAAK,SAASC,QAAS7H,EAAAC,EAAAC,cAAC+H,EAAD,SAEhCjI,EAAAC,EAAAC,cAACgI,EAAD,UC1GOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAApF,EAAA,GAAAqF,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAA3I,GAAiD,IAA9C6I,EAA8C7I,EAA9C6I,OAAQC,EAAsC9I,EAAtC8I,OAAQC,EAA8B/I,EAA9B+I,OAAQC,EAAsBhJ,EAAtBgJ,OAAQC,EAAcjJ,EAAdiJ,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDdU,IAASC,OACP/I,EAAAC,EAAAC,cAACF,EAAAC,EAAM+I,WAAP,KACEhJ,EAAAC,EAAAC,cAAC+I,EAAD,OAEFC,SAASC,eAAe,SAM1BhB","file":"static/js/main.e96a0122.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <header className='header'>\r\n      <h1 className='logo'>{title}</h1>\r\n      {location.pathname === '/' && (\r\n        <Button\r\n          color={showAdd ? 'red' : 'black'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      )}\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Globant &copy; 2022</p>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder && 'reminder'}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nimport React from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1</h4>\r\n      <h6>Globant</h6>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport About from './components/About'\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  // Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(task),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = { id, ...task }\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // Delete Task\r\n  const deleteTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE',\r\n    })\r\n    //We should control the response status to decide if we will change the state or not.\r\n    res.status === 200\r\n      ? setTasks(tasks.filter((task) => task.id !== id))\r\n      : alert('Error Deleting This Task')\r\n  }\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updTask),\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: data.reminder } : task\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n      <div className='container'>\r\n        <Header\r\n          onAdd={() => setShowAddTask(!showAddTask)}\r\n          showAdd={showAddTask}\r\n        />\r\n        <Routes>\r\n          <Route\r\n            path='/'\r\n            element={\r\n              <>\r\n                {showAddTask && <AddTask onAdd={addTask} />}\r\n                {tasks.length > 0 ? (\r\n                  <Tasks\r\n                    tasks={tasks}\r\n                    onDelete={deleteTask}\r\n                    onToggle={toggleReminder}\r\n                  />\r\n                ) : (\r\n                  'No Tasks To Show'\r\n                )}\r\n              </>\r\n            }\r\n          />\r\n          <Route path='/about' element={<About />} />\r\n        </Routes>\r\n        <Footer />\r\n      </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}